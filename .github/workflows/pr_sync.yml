name: CI/CD Per-PR Sync Workflow

on:
  pull_request:
    branches: [ "*" ]
    types: [opened, synchronize, reopened, labeled, unlabeled]

jobs:
  pr-check:
    runs-on: ubuntu-latest
    env:
      CUSTOM_RULES_DIR: ${{ secrets.CUSTOM_RULES_DIR }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip cache purge
        pip install .[dev]
        pip install lib/kql lib/kibana

    - name: Run Unit Tests
      run: |
        python -m detection_rules test

    - name: Check for Telemetry Review Label
      id: label-check
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const pr = await github.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
          });
          const labels = pr.data.labels.map(label => label.name);
          return labels.includes('telemetry-review');

    - name: Telemetry Check (Optional)
      if: steps.label-check.outputs.result == 'true'
      run: |
        # Your command to check rules against telemetry
        echo "Checking rules against telemetry..."
      env:
        ELASTICSEARCH_URL: ${{ secrets.ELASTICSEARCH_URL }}
        ELASTICSEARCH_USERNAME: ${{ secrets.ELASTIC_USERNAME }}
        ELASTICSEARCH_PASSWORD: ${{ secrets.ELASTIC_PASSWORD }}

    - name: Remove Telemetry Review Label
      if: steps.label-check.outputs.result == 'true'
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.issues.removeLabel({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            name: 'telemetry-review',
          });
